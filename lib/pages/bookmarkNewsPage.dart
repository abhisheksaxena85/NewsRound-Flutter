import 'dart:async';import 'package:cached_network_image/cached_network_image.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_spinkit/flutter_spinkit.dart';import 'package:news_round/pages/bookmarkFiles/bookmarkContentDetails.dart';import 'package:news_round/pages/bookmarkFiles/bookmarkDataModel.dart';import 'package:news_round/pages/bookmarkFiles/bookmarkDbHelper.dart';class bookmarkNewsPage extends StatefulWidget {  @override  State<bookmarkNewsPage> createState() => _bookmarkNewsPageState();}class _bookmarkNewsPageState extends State<bookmarkNewsPage> {  //List of items from bookmark LDB  bookmark_DB_helper databaseHelper = bookmark_DB_helper();  @override  void initState() {    super.initState();  }  //Getting data from database  Future<List<bookmarkDataModel>> dataList() async{    return await databaseHelper.getDataList();  }  @override  Widget build(BuildContext context) {    //ThemeMode boolean    bool theme = MediaQuery.of(context).platformBrightness == Brightness.light;    bool lightTheme = theme ? true : false;    //Getting screen width and height    double width = MediaQuery.of(context).size.width*1;    double height = MediaQuery.of(context).size.height*1;    //*Changing the color of statusBar of this screen    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(      statusBarColor: lightTheme ? Colors.white : Colors.black54,    ));    //Root Widget of class    return Scaffold(      backgroundColor:lightTheme?Colors.white:Colors.grey.shade900, //Color of whole class      //AppBar of bookmark class      appBar:AppBar(        surfaceTintColor:lightTheme?Colors.white:Colors.grey.shade900,        shadowColor: Colors.transparent,        backgroundColor:lightTheme?Colors.white:Colors.grey.shade900,        title: Text('Saved News Articles',          style: TextStyle(              fontSize: 20,              fontFamily: 'nunitosSans_regular',              fontWeight: FontWeight.bold,              color: lightTheme ? Colors.black87 : Colors.white),        ),      ),      //Main Body Content of bookmark page class      body:RefreshIndicator(        displacement: 30,        backgroundColor: lightTheme ? Colors.white : Colors.black87, //Managing color with theme        color: lightTheme ? Colors.black87 : Colors.white, //Managing color with theme        onRefresh: ()async{          setState(() {});        }, //On refresh call back method        child: Container(            width: double.infinity,            height: double.infinity,            //Building the list of Articles after loading from Sqlite database            child:FutureBuilder(              future: dataList(),              builder: (context,snapshot){                //When snapshot has data and Connection Satate is done                if(snapshot.hasData && snapshot.connectionState == ConnectionState.done){                  //Building the news articles after loading data                  return Container(                    alignment: Alignment.center,                    margin: const EdgeInsets.only(                        top: 0, bottom: 1, left: 15, right: 15),                    //Sub-Item ListView Builder                    child: categoryBuilder(snapshot,context,lightTheme,'',width,height,false,35),                  );                //When snapshot not yet loaded and Connection State is loading                }else if(snapshot.connectionState ==ConnectionState.waiting){                  return  Container(                      alignment: Alignment.center,                      height:height*0.8,                      child: Center(                        child: SpinKitFadingCircle(  //Cicular SpinKit Animation till waiting                          color:lightTheme?Colors.black87:Colors.white,                        ),                      ));                //Showing Error when something goes wrong                }else{                  return Container(                    width: width*0.4,                    height: height*0.4,                    child: Column(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        //Error title                        Container(                          child: Text(                            textAlign: TextAlign.center,                            'Something went wrong,\nPlease try again',                            style: TextStyle(                                shadows: [                                  Shadow(                                    color:lightTheme? Colors.black:Colors.white,                                    blurRadius: 0.1,                                  )                                ],                                fontSize: 20,                                color: Colors.red.shade400,                                fontFamily: 'nunitosSans_semiBold',                                fontWeight: FontWeight.bold),                          ),                        )                      ],                    ),                  );                }              },            )        ),      ),    );  }  Widget categoryBuilder(AsyncSnapshot<List<bookmarkDataModel>> snapshot, BuildContext context,bool lightTheme,String category,double width, double height,bool isTitleVisible,int itemLenght){ //Getting data from parent class    //Showing erorr widget if bookmarks are not available in database    if(snapshot.data!.isEmpty){      return Container(        width: width*0.4,        alignment: Alignment.center,        height: height,        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          crossAxisAlignment: CrossAxisAlignment.center,          children: [            //Image of error message            Image.asset( 'assets/images/newsNotFoundImage.png',),            //Title of error message            Container(              child: Text(                textAlign: TextAlign.center,                'No Bookmark found!',                style: TextStyle(                    fontSize: 18,                    color: lightTheme ? Colors.black: Colors.white,                    fontFamily: 'nunitosSans_semiBold',                    fontWeight: FontWeight.bold),              ),            )          ],        ),      );    //Building bookmark widget when bookmarks are available in database    }else{      return Container(        margin:const EdgeInsets.only(top: 0),        child:ListView(          scrollDirection: Axis.vertical,          primary: false, //Disabling scroll          shrinkWrap: false,          children: [            //Category Title of each category bloc            Container(              margin: const EdgeInsets.only(bottom: 10),              child:isTitleVisible? Text(                '$category :',                style: TextStyle(fontSize: 20, color: lightTheme?Colors.black87:Colors.white, fontFamily: 'nunitosSans_semiBold'                ),              ):const SizedBox(),            ),            //Generating items of category bloc            ListView.builder(                shrinkWrap: true,                primary: false,                scrollDirection: Axis.vertical,                //Building only ten items in each Category bloc with ternary Logic                itemCount: snapshot.data!.length,                itemBuilder:(context, index){                  //Each Item with Click Function Call Back, And Checking if item is removed or not                  return InkWell(                      onTap: (){                        //Redirecting to categoryContentDetails page to show more details to users                        Navigator.push(context,MaterialPageRoute(builder: (context)=> bookmarkContentDetails(snapshot: snapshot, index: index,category: category,)));                      },                      //Each Horizontal container with image and title and Click Feature                      child: Container(                        padding:const EdgeInsets.only(left: 0.2,top: 0.2,bottom: 0.2),                        margin:const EdgeInsets.only(bottom: 15),                        width: double.infinity,                        height: 100,                        alignment: Alignment.center,                        //Providing border and it's Radius                        decoration:BoxDecoration(                            color:lightTheme? Colors.white: Colors.black38,                            borderRadius:const BorderRadius.all(Radius.circular(10)),                            border: Border.all(                                width: 0.2,                                color: lightTheme ? Colors.black87 : Colors.grey)),                        //Image and title                        child: Row(                          mainAxisAlignment: MainAxisAlignment.start,                          crossAxisAlignment: CrossAxisAlignment.center,                          children: [                            //News Artilce page Image                            ClipRRect(                                borderRadius:                                const BorderRadius.only(topLeft: Radius.circular(10),bottomLeft: Radius.circular(10)),                                child: Container(                                  color:lightTheme? Colors.grey.shade200: Colors.black38,                                  //Cached Network Image                                  child: CachedNetworkImage(                                    fit: BoxFit.cover,                                    height: 100,                                    width: width*0.35,                                    placeholder: (context, url) => SpinKitThreeBounce(                                      color: lightTheme? Colors.black54:Colors.white,                                      size: 20,                                    ),                                    //Error widget when Image is not loaded                                    errorWidget: (context, url, error) =>                                    const Icon(                                      Icons.image_not_supported_outlined,                                      color: Colors.red,                                    ),                                    //Image url from snapshot                                    imageUrl:Uri.parse(snapshot.data![index].urlToImage.toString()).isAbsolute ? snapshot.data![index].urlToImage.toString(): "https://img.freepik.com/premium-vector/error-message-laptop-screen-error-warning-sign-screen-computer-device_630277-341.jpg",                                  ),                                )),                            //News Article page title                            Container(                                margin:const EdgeInsets.only(left: 15),                                width: width * 0.48,                                child: Text(                                  maxLines: 3,                                  overflow: TextOverflow.ellipsis,                                  snapshot                                      .data![index].title                                      .toString(),                                  style: TextStyle(                                      fontSize: 15,                                      color:lightTheme? Colors.black:Colors.white,                                      fontFamily:                                      'nunitosSans_regular',                                      fontWeight: FontWeight.bold),                                )),                          ],                        ),                      ));                }),          ],        ),      );    }  }}