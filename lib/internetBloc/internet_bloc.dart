import 'dart:async';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:news_round/internetBloc/internet_event.dart';import 'package:news_round/internetBloc/internet_state.dart';import 'package:connectivity/connectivity.dart';class InternetBloc extends Bloc<InternetEvent, InternetState> {  Connectivity connectivity = Connectivity();  StreamSubscription? subscription;  InternetBloc() : super(internetInitialState()) {    on<internetGainedEvent>((event, emit) {      emit(internetGainedState());    });    on<internetLostEvent>((event, emit) {      emit(internetLostState());    });    subscription = connectivity.onConnectivityChanged.listen((connectivityResult) {      if(connectivityResult == ConnectivityResult.mobile || connectivityResult == ConnectivityResult.wifi){        add(internetGainedEvent());      }else{        add(internetLostEvent());      }    });  }  @override  Future<void> close() {    subscription!.cancel();    return super.close();  }}