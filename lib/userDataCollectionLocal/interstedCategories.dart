import 'package:flutter/cupertino.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter/widgets.dart';import 'package:news_round/pages/dashboardBottomNavigation.dart';import 'package:news_round/pages/dashboardScreen.dart';import 'package:shared_preferences/shared_preferences.dart';class interstedCategories extends StatefulWidget {  final bool backButtton;  interstedCategories(this.backButtton);  @override  State<interstedCategories> createState() => _interstedCategoriesState();}class _interstedCategoriesState extends State<interstedCategories> {  List<String> selectedCategoryList = [];  Color businescolor = Colors.transparent;  Color businesTextColor = Colors.grey;  bool  businessSelected = true;  Color entertainmentcolor = Colors.transparent;  Color entertainmentTextColor = Colors.grey;  bool  entertainmentSelected = true;  Color newscolor = Colors.transparent;  Color newsTextColor = Colors.grey;  bool  newsSelected = true;  Color healthcolor = Colors.transparent;  Color healthTextColor = Colors.grey;  bool  healthSelected = true;  Color internationalcolor = Colors.transparent;  Color internationalTextColor = Colors.grey;  bool  internationalSelected = true;  Color lifestylecolor = Colors.transparent;  Color lifestyleTextColor = Colors.grey;  bool  lifestyleSelected = true;  Color politicscolor = Colors.transparent;  Color politicsTextColor = Colors.grey;  bool  politicsSelected = true;  Color sportscolor = Colors.transparent;  Color sportsTextColor = Colors.grey;  bool  sportsSelected = true;  Color sciencecolor = Colors.transparent;  Color scienceTextColor = Colors.grey;  bool  scienceSelected = true;  Color technologycolor = Colors.transparent;  Color technologyTextColor = Colors.grey;  bool  technologySelected = true;  Color spaceSciencecolor = Colors.transparent;  Color spaceScienceTextColor = Colors.grey;  bool  spaceScienceSelected = true;  @override  Widget build(BuildContext context) {    //ThemeMode boolean    bool theme = MediaQuery.of(context).platformBrightness == Brightness.light;    bool lightTheme = theme ? true : false;    //*Changing the color of statusBar of this screen    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(      statusBarColor: lightTheme ? Colors.white : Colors.grey.shade900,    ));    return Scaffold(      appBar: AppBar(        shadowColor: Colors.transparent,        backgroundColor: lightTheme?Colors.white:Colors.grey.shade900,        leading:widget.backButtton? IconButton(          tooltip: 'Navigation',          onPressed: (){            Navigator.pop(context);          },          icon:const Icon(Icons.arrow_back_ios_sharp),          color: lightTheme?Colors.black87:Colors.white,          iconSize: 25,        ):Container(),      ),      body: Container(        alignment: Alignment.center,        color:lightTheme?Colors.white:Colors.grey.shade900,        child:Column(          mainAxisAlignment: MainAxisAlignment.center,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Expanded(                flex: 5,                child: Column(                  mainAxisAlignment: MainAxisAlignment.end,                  crossAxisAlignment: CrossAxisAlignment.center,                  children: [                    //Title of category UI                    categoryTitle(lightTheme),                    //Description of category screen                    categoryDescription(lightTheme),const SizedBox(height: 30,),                    //Category selectable content                    categoryContent(lightTheme),                  ],                ),              ),              //Finish button              Expanded(                flex: 2,                child: finishBtn(context,lightTheme),              )            ],        ),      ),    );  }  //Category title  Widget categoryTitle(bool lightTheme){    return Container(      margin: const EdgeInsets.only(left: 10,right: 10),      child: Text(        'Select your intersted categories',        style: TextStyle(          fontSize: 23,          color:lightTheme?Colors.black:Colors.white,          fontWeight: FontWeight.bold,          fontFamily: 'nunitosSans_bold'        ),      ),    );  }  //Category description  Widget categoryDescription(bool lightTheme){    return Container(      margin: const EdgeInsets.only(left: 10,right: 10,top: 10),      child:Text(        'Select at least three categories below',        style: TextStyle(            fontSize: 16,            color:lightTheme?Colors.black38:Colors.white38,            fontFamily: 'nunitosSans_regular'        ),      ),    );  }  //Category content  Widget categoryContent(bool lightTheme){    return Wrap(      crossAxisAlignment: WrapCrossAlignment.center,      children: [        InkWell(            onTap: (){              setState(() {                if(businessSelected){                  businesTextColor = Colors.white;                  businescolor = Colors.blue.shade800;                  businessSelected = !businessSelected;                  selectedCategoryList.add('Business');                }else{                  businesTextColor = Colors.grey;                  businescolor = Colors.transparent;                  businessSelected = !businessSelected;                  selectedCategoryList.remove('Business');                }              });            },            child: categoryChip('Business',businescolor,businesTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(entertainmentSelected){                  entertainmentTextColor = Colors.white;                  entertainmentcolor = Colors.blue.shade800;                  entertainmentSelected = !entertainmentSelected;                  selectedCategoryList.add('Entertainment');                }else{                  entertainmentTextColor = Colors.grey;                  entertainmentcolor = Colors.transparent;                  entertainmentSelected = !entertainmentSelected;                  selectedCategoryList.remove('Entertainment');                }              });            },            child: categoryChip('Entertainment',entertainmentcolor,entertainmentTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(newsSelected){                  newsTextColor = Colors.white;                  newscolor = Colors.blue.shade800;                  newsSelected = !newsSelected;                  selectedCategoryList.add('News');                }else{                  newsTextColor = Colors.grey;                  newscolor = Colors.transparent;                  newsSelected = !newsSelected;                  selectedCategoryList.remove('News');                }              });            },            child: categoryChip('News',newscolor,newsTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(healthSelected){                  healthTextColor = Colors.white;                  healthcolor = Colors.blue.shade800;                  healthSelected = !healthSelected;                  selectedCategoryList.add('Health');                }else{                  healthTextColor = Colors.grey;                  healthcolor = Colors.transparent;                  healthSelected = !healthSelected;                  selectedCategoryList.remove('Health');                }              });            },            child: categoryChip('Health',healthcolor,healthTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(internationalSelected){                  internationalTextColor = Colors.white;                  internationalcolor = Colors.blue.shade800;                  internationalSelected = !internationalSelected;                  selectedCategoryList.add('International');                }else{                  internationalTextColor = Colors.grey;                  internationalcolor = Colors.transparent;                  internationalSelected = !internationalSelected;                  selectedCategoryList.remove('International');                }              });            },            child: categoryChip('International',internationalcolor,internationalTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(lifestyleSelected){                  lifestyleTextColor = Colors.white;                  lifestylecolor = Colors.blue.shade800;                  lifestyleSelected = !lifestyleSelected;                  selectedCategoryList.add('LifeStyle');                }else{                  lifestyleTextColor = Colors.grey;                  lifestylecolor = Colors.transparent;                  lifestyleSelected = !lifestyleSelected;                  selectedCategoryList.remove('LifeStyle');                }              });            },            child: categoryChip('Life Style',lifestylecolor,lifestyleTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(politicsSelected){                  politicsTextColor = Colors.white;                  politicscolor = Colors.blue.shade800;                  politicsSelected = !politicsSelected;                  selectedCategoryList.add('Politics');                }else{                  politicsTextColor = Colors.grey;                  politicscolor = Colors.transparent;                  politicsSelected = !politicsSelected;                  selectedCategoryList.remove('Politics');                }              });            },            child: categoryChip('Politics',politicscolor,politicsTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(sportsSelected){                  sportsTextColor = Colors.white;                  sportscolor = Colors.blue.shade800;                  sportsSelected = !sportsSelected;                  selectedCategoryList.add('Sports');                }else{                  sportsTextColor = Colors.grey;                  sportscolor = Colors.transparent;                  sportsSelected = !sportsSelected;                  selectedCategoryList.remove('Sports');                }              });            },            child: categoryChip('Sports',sportscolor,sportsTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(scienceSelected){                  scienceTextColor = Colors.white;                  sciencecolor = Colors.blue.shade800;                  scienceSelected = !scienceSelected;                  selectedCategoryList.add('Science');                }else{                  scienceTextColor = Colors.grey;                  sciencecolor = Colors.transparent;                  scienceSelected = !scienceSelected;                  selectedCategoryList.remove('Science');                }              });            },            child: categoryChip('Science',sciencecolor,scienceTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(technologySelected){                  technologyTextColor = Colors.white;                  technologycolor = Colors.blue.shade800;                  technologySelected = !technologySelected;                  selectedCategoryList.add('Technology');                }else{                  technologyTextColor = Colors.grey;                  technologycolor = Colors.transparent;                  technologySelected = !technologySelected;                  selectedCategoryList.remove('Technology');                }              });            },            child: categoryChip('Technology',technologycolor,technologyTextColor,lightTheme)),        InkWell(            onTap: (){              setState(() {                if(spaceScienceSelected){                  spaceScienceTextColor = Colors.white;                  spaceSciencecolor = Colors.blue.shade800;                  spaceScienceSelected = !spaceScienceSelected;                  selectedCategoryList.add('SpaceScience');                }else{                  spaceScienceTextColor = Colors.grey;                  spaceSciencecolor = Colors.transparent;                  spaceScienceSelected = !sportsSelected;                  selectedCategoryList.remove('SpaceScience');                }              });            },            child: categoryChip('Space Science',spaceSciencecolor,spaceScienceTextColor,lightTheme)),      ],    );  }  Widget categoryChip(String value,Color color,Color textColor,bool lightTheme){    return Container(      margin:const EdgeInsets.only(left: 15,right: 6,top: 7,bottom: 7),      decoration:  BoxDecoration(        color: color,        border: Border.all(width:0.3,color:lightTheme? Colors.black38:Colors.white,),        borderRadius:const BorderRadius.all(Radius.circular(8))      ),      child: Padding(        padding:const EdgeInsets.only(left: 20,right: 20,top: 8,bottom: 8),        child: Text(          value,          style:  TextStyle(              fontSize: 16,              color: textColor,              fontWeight: FontWeight.normal,              fontFamily: 'nunitosSans_semiBold'          ),        ),      ),    );  }  Widget finishBtn(BuildContext context,bool lightTheme){    return Container(      alignment: Alignment.bottomCenter,      margin: EdgeInsets.only(left: 20, right: 20, bottom: 30),      child: InkWell(          onTap: () async {            if (selectedCategoryList.length >= 3) {              //Setting the country selected by user              SharedPreferences preferences = await SharedPreferences.getInstance();              preferences.setStringList('selectedCategories', selectedCategoryList);              preferences.setBool('isUsrAvailable', true);              Navigator.of(context)                   .popUntil((route) {                     return route.isFirst;                   },);              Navigator.pushReplacement(context, MaterialPageRoute(builder:(context)=> dashboardNavigationBar(selectedCategories:selectedCategoryList)));            } else {              //Debug Only              if (kDebugMode) {                print('Button is disable, select value first');              }            }          },          child: Container(            width: double.infinity,            height: 45,            alignment: Alignment.center,            decoration: BoxDecoration(                color:lightTheme? selectedCategoryList.length >= 3 ? Colors.black : Colors.black26:selectedCategoryList.length >= 3 ? Colors.white : Colors.white24,                borderRadius: const BorderRadius.all(Radius.circular(8))),            child: Text(              textAlign:TextAlign.center,              'Finish',              style: TextStyle(                  color:lightTheme? Colors.white:Colors.black,                  fontSize: 18,                  fontFamily: 'nunitosSans_regular',                  fontWeight: FontWeight.normal),            ),          )),    );  }}